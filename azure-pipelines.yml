# Common variables for all platforms (ldc is hardcoded in windows job)
variables:
  DC: ldc
  DVersion: 1.17.0
  arch: x64

# Trigger on new commit or tag. By default tags aren't built
trigger:
- '*'
- refs/tags/v*

# Nightly builds
schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master
    - releases/*

#
# LINUX
#
jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - checkout: self
      fetchDepth: 1

# Uncomment these DownloadSecureFile tasks + script to use secure files. Or delete if not needed
    - task: DownloadSecureFile@1
      name: aeffect
      inputs:
        secureFile: 'aeffect'
    - task: DownloadSecureFile@1
      name: aeffectx
      inputs:
        secureFile: 'aeffectx'
    # Creates VST2_SDK\pluginterfaces\vst2.x folder and copies aeffect.h and aeffectx.h there
    - script: |
        set -ex
        mkdir -vp VST2_SDK/pluginterfaces/vst2.x
        cp $(aeffect.secureFilePath) VST2_SDK/pluginterfaces/vst2.x/aeffect.h
        cp $(aeffectx.secureFilePath) VST2_SDK/pluginterfaces/vst2.x/aeffectx.h
      displayName: Download secure files
      
    # Installs libx11-dev package, ldc, dub, dplug-build
    - script: |
        # exit as soon as any line in the bash script fails
        set -ex
        export VST2_SDK="$(pwd)/VST2_SDK"

        # There is no permissions in default directory for system changes, so make sure to cd ..
        cd ..
        
        # Install libs
        sudo apt-get -yq install libx11-dev
        
        # Install compiler
        curl -fsS https://dlang.org/install.sh | bash -s $(DC)-$(DVersion) -a
        ~/dlang/install.sh list
        source ~/dlang/$(DC)-$(DVersion)/activate
        ldc2 --version
        dub --version

        # Pull dplug docker container
        docker pull ctrecordings/dplug:latest

        # Install process
        git clone --depth 1 https://github.com/AuburnSounds/Dplug dplug
        cd dplug/tools/process
        dub build
        sudo ln -sf $(pwd)/process /usr/bin/process
      displayName: Install
      
    - script: |
        set -ex
        # Environment variables are not preserved between steps.
        source ~/dlang/$(DC)-$(DVersion)/activate
        export VST2_SDK="$(pwd)/VST2_SDK"

        # Here you can customize the flags, or build multiple plugins
        docker run -w /src/examples/distort --volume "$(pwd)/VST2_SDK:/VST2_SDK" --volume "$(pwd):/src" ctrecordings/dplug --no-color -c VST -c VST3 -c LV2 --compiler ldc2

        docker run -w /src/examples/clipit --volume "$(pwd)/VST2_SDK:/VST2_SDK" --volume "$(pwd):/src" ctrecordings/dplug --no-color -c VST -c VST3 -c LV2 --compiler ldc2

      displayName: Build plug-ins

    - script: |
        set -ex        
        process examples/distort/builds/Linux-64b-VST/Witty\ Audio\ Destructatorizer.so -t 10
        process examples/clipit/builds/Linux-64b-VST/Witty\ Audio\ CLIP\ It.so -t 10        
      displayName: Test loading plug-ins      
    
    # This task uploads the builds directory that contains all artifacts produced by dplug-build
    # You may need to repeat this for each plugin that you build
    # Pattern matching is not supported here
    - upload: $(System.DefaultWorkingDirectory)/examples/distort/builds/
      artifact: distort-linux

    - upload: $(System.DefaultWorkingDirectory)/examples/clipit/builds/
      artifact: clipit-linux
 
#
# MACOS
#
- job: Mac
  pool:
    vmImage: 'macOS-latest'
  variables:
    MACOSX_DEPLOYMENT_TARGET: 10.9
  steps:
    - checkout: self
      fetchDepth: 1

# Uncomment these DownloadSecureFile tasks + script to use secure files. Or delete if not needed
    - task: DownloadSecureFile@1
      name: aeffect
      inputs:
        secureFile: 'aeffect'
    - task: DownloadSecureFile@1
      name: aeffectx
      inputs:
        secureFile: 'aeffectx'
    # Creates VST2_SDK\pluginterfaces\vst2.x folder and copies aeffect.h and aeffectx.h there
    - script: |
        set -ex
        mkdir -vp VST2_SDK/pluginterfaces/vst2.x
        cp $(aeffect.secureFilePath) VST2_SDK/pluginterfaces/vst2.x/aeffect.h
        cp $(aeffectx.secureFilePath) VST2_SDK/pluginterfaces/vst2.x/aeffectx.h
      displayName: Download secure files
      
    # Installs ldc, dub, dplug-build
    - script: |
        # exit as soon as any line in the bash script fails
        set -ex
        export VST2_SDK="$(pwd)/VST2_SDK"

        # There is no permissions in default directory for system changes, so make sure to cd ..
        cd ..

        brew update
        brew install gpg
        
        # Install compiler
        curl -fsS https://dlang.org/install.sh | bash -s $(DC)-$(DVersion) -a
        ~/dlang/install.sh list
        source ~/dlang/$(DC)-$(DVersion)/activate
        ldc2 --version
        dub --version

        # Install dplug-build
        git clone --depth 1 https://github.com/AuburnSounds/Dplug dplug
        cd dplug/tools/dplug-build
        dub build

        # Install process
        cd ../process
        dub build
      displayName: Install
      
    - script: |
        set -ex
        # Environment variables are not preserved between steps.
        source ~/dlang/$(DC)-$(DVersion)/activate
        export VST2_SDK="$(pwd)/VST2_SDK"

        # Here you can customize the flags, or build multiple plugins
        cd examples/distort
        ../../../dplug/tools/dplug-build/dplug-build --no-color -c VST -c VST3 -c AU
        cd ../..
        cd examples/clipit
        ../../../dplug/tools/dplug-build/dplug-build --no-color -c VST -c VST3 -c AU
        cd ../..
      displayName: Build plug-ins

    - script: |
        set -ex
        ../dplug/tools/process/process examples/distort/builds/macOS-64b-VST/Witty\ Audio\ Destructatorizer.vst/Contents/MacOS/Witty\ Audio\ Destructatorizer -t 10
        ../dplug/tools/process/process examples/clipit/builds/macOS-64b-VST/Witty\ Audio\ CLIP\ It.vst/Contents/MacOS/Witty\ Audio\ CLIP\ It -t 10
      displayName: Test loading plug-ins      
    
    # This task uploads the builds directory that contains all artifacts produced by dplug-build
    # You may need to repeat this for each plugin that you build
    # Pattern matching is not supported here
    - upload: $(System.DefaultWorkingDirectory)/examples/distort/builds/
      artifact: distort-mac

    - upload: $(System.DefaultWorkingDirectory)/examples/clipit/builds/
      artifact: clipit-mac
#
# WINDOWS
#
- job: Windows
  pool:
    vmImage: 'windows-latest'
  variables:
    VSINSTALLDIR: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\
    ARCH: x64
  steps:
    - checkout: self
      fetchDepth: 1
    
# Uncomment these DownloadSecureFile tasks + script to use secure files. Or delete if not needed
    - task: DownloadSecureFile@1
      name: aeffect
      inputs:
        secureFile: 'aeffect'
    - task: DownloadSecureFile@1
      name: aeffectx
      inputs:
        secureFile: 'aeffectx'
    - script: |
        echo on
        mkdir VST2_SDK\pluginterfaces\vst2.x
        echo $(aeffect.secureFilePath)
        COPY $(aeffect.secureFilePath) VST2_SDK\pluginterfaces\vst2.x\aeffect.h
        COPY $(aeffectx.secureFilePath) VST2_SDK\pluginterfaces\vst2.x\aeffectx.h
      displayName: Download secure files
    
    - powershell: |
        echo on
        cd ..
        
        # Download dplug
        git clone --depth 1 https://github.com/AuburnSounds/Dplug dplug
        
        # Download compiler
        $version = $env:DVersion;
        $url = "https://github.com/ldc-developers/ldc/releases/download/v$($version)/ldc2-$($version)-windows-multilib.7z";
        Invoke-WebRequest $url -OutFile "compiler.archive";
        7z x compiler.archive > $null;
        Rename-Item ldc2-$($version)-windows-multilib ldc2;
      displayName: Download dplug and ldc
      
    - script: |
        echo on
        set VST2_SDK=%CD%/VST2_SDK
        cd ..
        set PATH=%CD%\ldc2\bin;%PATH%
        call "%VSINSTALLDIR%Common7\Tools\VsDevCmd.bat" -arch=%ARCH%       

        pushd dplug\tools\dplug-build
        dub build
        popd
        copy dplug\tools\dplug-build\dplug-build.exe ldc2\bin\dplug-build.exe

        pushd dplug\tools\process
        dub build
        popd
        copy dplug\tools\process\process.exe ldc2\bin\process.exe

      displayName: Build dplug-build
      
    - script: |
        echo on
        set PATH=%CD%/../ldc2/bin;%PATH%
        set VST2_SDK=%CD%/VST2_SDK
        call "%VSINSTALLDIR%Common7\Tools\VsDevCmd.bat" -arch=%ARCH%

        # Here ldc2, dub and dplug-build tools are available. Customize as needed
        cd examples\distort
        dplug-build --no-color -a x86_64 -c VST -c VST3
        cd ..\..
        cd examples\clipit
        dplug-build --no-color -a x86_64 -c VST -c VST3
        cd ..\..

      displayName: Build plug-ins

    - script: |
        echo on
        set PATH=%CD%/../ldc2/bin;%PATH%
        process "examples\distort\builds\Windows-64b-VST\Witty Audio Destructatorizer-64.dll" -t 10
        process "examples\clipit\builds\Windows-64b-VST\Witty Audio CLIP It-64.dll" -t 10
      displayName: Test loading plug-ins

    - upload: $(System.DefaultWorkingDirectory)/examples/distort/builds/
      artifact: distort-windows

    - upload: $(System.DefaultWorkingDirectory)/examples/clipit/builds/
      artifact: clipit-windows